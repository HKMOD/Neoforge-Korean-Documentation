"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[545],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),p=o,m=d["".concat(l,".").concat(p)]||d[p]||f[p]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4483:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={},i="Run Configurations",s={unversionedId:"docs/configuration/runs",id:"version-5.x/docs/configuration/runs",title:"Run Configurations",description:"Run configurations define how an instance of the game is going to run. This includes arguments, working directories, task names, etc. Run configurations are defined within the minecraft.runs block. While no runs are configured by default, Forge does provide the configurations client, server, data, or gameTestServer.",source:"@site/neogradle_versioned_docs/version-5.x/docs/configuration/runs.md",sourceDirName:"docs/configuration",slug:"/docs/configuration/runs",permalink:"/Neoforge-Korean-Documentation/en/neogradle/5.x/docs/configuration/runs",draft:!1,tags:[],version:"5.x",frontMatter:{},sidebar:"ngSidebar",previous:{title:"ForgeGradle Configurations",permalink:"/Neoforge-Korean-Documentation/en/neogradle/5.x/docs/configuration/"},next:{title:"Dependencies",permalink:"/Neoforge-Korean-Documentation/en/neogradle/5.x/docs/dependencies/"}},l={},c=[{value:"Mod Configurations",id:"mod-configurations",level:2}],u={toc:c},d="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"run-configurations"},"Run Configurations"),(0,o.kt)("p",null,"Run configurations define how an instance of the game is going to run. This includes arguments, working directories, task names, etc. Run configurations are defined within the ",(0,o.kt)("inlineCode",{parentName:"p"},"minecraft.runs")," block. While no runs are configured by default, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/MinecraftForge/MinecraftForge/blob/1.19.x/build.gradle#L374-L430"},"Forge")," does provide the configurations ",(0,o.kt)("inlineCode",{parentName:"p"},"client"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"data"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"gameTestServer"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},"minecraft {\n    // ...\n    runs {\n        // Configure runs here\n    }\n}\n")),(0,o.kt)("p",null,"Run configurations can be added similar to any ",(0,o.kt)("inlineCode",{parentName:"p"},"NamedDomainObjectContainer")," using closures."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},"// Inside the minecraft block\nruns {\n    // Creates or configures the run configuration named 'client'\n    client {\n        // Configure run\n    }\n}\n")),(0,o.kt)("p",null,"The following configurations properties are available:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},"// Inside the runs block\nclient {\n    // The name of the Gradle run tasks,\n    // Defaults to 'runX' where X is the container name\n    taskName 'runThing'\n\n    // Sets the entrypoint of the program to launch\n    // Forge sets userdev main to be 'cpw.mods.bootstraplauncher.BootstrapLauncher'\n    main 'com.example.Main'\n\n    // Sets the working directory of the config\n    // Defaults to './run'\n    workingDirectory 'run'\n\n    // Sets the name of the module for IntelliJ IDEA to configure for its runs\n    // Defaults to '<project_name>.main'\n    ideaModule 'example.main'\n\n    // Sets whether this should run a Minecraft client\n    // If not specified, checks the following\n    // - Is there an environment property 'thing' that contains 'client'\n    // - Does the configuration name contain 'client'\n    // - Is main set to 'mcp.client.Start'\n    // - Is main set to 'net.minecraft.client.main.Main'\n    client true\n\n    // Set the parent of this configuration to inherit from\n    parent runs.example\n\n    // Sets the children of this configuration\n    children runs.child\n\n    // Merges this configuration and specifies whether to overwrite existing properties\n    merge runs.server, true\n\n    // If not false, will merge the arguments of the parent with this configuration\n    inheritArgs false\n\n    // If not false, will merge the JVM arguments of the parent with this configuration\n    inheritJvmArgs false\n\n    // Adds a sourceset to the classpath\n    // If none is specified, adds sourceSet.main\n    source sourceSets.api\n\n    // Sets an environment property for the run\n    // Value will be interpreted as a file or a string\n    environment 'envKey', 'value'\n\n    // Sets a system property\n    // Value will be interpreted as a file or a string\n    property 'propKey', 'value'\n\n    // Sets an argument to be passed into the application\n    // Can specify multiple with 'args'\n    arg 'hello'\n\n    // Sets a JVM argument\n    // Can specify multiple with 'jvmArgs'\n    jvmArg '-Xmx2G'\n\n    // Sets a token\n    // Currently, the following tokens are being used:\n    // - runtime_classpath\n    // - minecraft_classpath\n    token 'tokenKey', 'value'\n\n    // Sets a token that's lazily initialized\n    // Should usually be used instead of 'token', for example when the token resolves Gradle configurations\n    lazyToken('lazyTokenKey') {\n      'value'\n    }\n\n    // If not false, Gradle will stop once the process has finished\n    forceExit true\n\n    // If true, compile all projects instead of for the current task\n    // This is only used by IntelliJ IDEA\n    buildAllProjects false\n}\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can see a list of all configured userdev properties within the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/MinecraftForge/MinecraftForge/blob/d4836bc769da003528b6cebc7e677a5aa23a8228/build.gradle#L434-L470"},"MinecraftForge buildscript"),".")),(0,o.kt)("h2",{id:"mod-configurations"},"Mod Configurations"),(0,o.kt)("p",null,"A mod in the current environment can be added using the ",(0,o.kt)("inlineCode",{parentName:"p"},"mods")," block within a Run configuration. Mod blocks are also ",(0,o.kt)("inlineCode",{parentName:"p"},"NamedDomainObjectContainer"),"s."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},"// Inside the runs block\nclient {\n    // ...\n\n    mods {\n        // Configures the 'example' mod\n        example {\n            // Add a source set to a mod's sources\n            // This is recommended over manually adding classes and resources\n            source sourceSets.main\n\n            // Sets the location of the mod's classes\n            classes sourceSets.api.output\n\n            // Sets the location of the mod's resources\n            resources files('./my_resources')\n        }\n    }\n}\n")))}f.isMDXComponent=!0}}]);