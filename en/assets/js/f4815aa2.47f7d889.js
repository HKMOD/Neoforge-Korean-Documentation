"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[1956],{4527:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=n(5893),o=n(1151);const s={},r="Built-in Data Maps",c={id:"datamaps/neo_maps",title:"Built-in Data Maps",description:"NeoForge provides a few data maps that mostly replace hardcoded in-code vanilla maps.",source:"@site/docs/datamaps/neo_maps.md",sourceDirName:"datamaps",slug:"/datamaps/neo_maps",permalink:"/Neoforge-Korean-Documentation/en/docs/datamaps/neo_maps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Data Maps",permalink:"/Neoforge-Korean-Documentation/en/docs/datamaps/"},next:{title:"JSON Structure",permalink:"/Neoforge-Korean-Documentation/en/docs/datamaps/structure"}},i={},l=[{value:"<code>neoforge:compostables</code>",id:"neoforgecompostables",level:2}];function d(e){const a={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"built-in-data-maps",children:"Built-in Data Maps"}),"\n",(0,t.jsxs)(a.p,{children:["NeoForge provides a few data maps that mostly replace hardcoded in-code vanilla maps.",(0,t.jsx)(a.br,{}),"\n","These data maps can be found in ",(0,t.jsx)(a.code,{children:"NeoForgeDataMaps"}),", and are always ",(0,t.jsx)(a.em,{children:"optional"})," to ensure compatibility with vanilla clients."]}),"\n",(0,t.jsx)(a.h2,{id:"neoforgecompostables",children:(0,t.jsx)(a.code,{children:"neoforge:compostables"})}),"\n",(0,t.jsxs)(a.p,{children:["NeoForge provides a data map that allows configuring composter values, as a replacement for ",(0,t.jsx)(a.code,{children:"ComposterBlock#COMPOSTABLES"})," (which is now ignored).",(0,t.jsx)(a.br,{}),"\n","This data map is located at ",(0,t.jsx)(a.code,{children:"neoforged/data_maps/item/compostables.json"})," and its objects have the following structure:"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-js",children:'{\n    // A 0 to 1 (inclusive) float representing the chance that the item will update the level of the composter\n    "chance": 1\n}\n'})}),"\n",(0,t.jsx)(a.p,{children:"Example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-js",children:'{\n    "values": {\n        // Give acacia logs a 50% chance that they will fill a composter\n        "minecraft:acacia_log": {\n            "chance": 0.5\n        }\n    }\n}\n'})})]})}function p(e={}){const{wrapper:a}={...(0,o.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>c,a:()=>r});var t=n(7294);const o={},s=t.createContext(o);function r(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);