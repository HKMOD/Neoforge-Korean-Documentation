"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[6729],{1261:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var s=r(5893),a=r(1151),t=r(4866),o=r(5162);const i={},c="ForgeGradle Configurations",l={id:"docs/configuration/index",title:"ForgeGradle Configurations",description:"ForgeGradle Configurations",source:"@site/neogradle/docs/configuration/index.mdx",sourceDirName:"docs/configuration",slug:"/docs/configuration/",permalink:"/Neoforge-Korean-Documentation/neogradle/docs/configuration/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"ngSidebar",previous:{title:"ForgeGradle 5 -> 6 Migration Primer",permalink:"/Neoforge-Korean-Documentation/neogradle/docs/x_to_6.0"},next:{title:"Advanced Configurations",permalink:"/Neoforge-Korean-Documentation/neogradle/docs/configuration/advanced"}},d={},u=[{value:"Enabling Access Transformers",id:"enabling-access-transformers",level:2},{value:"Human-Readable Mappings",id:"human-readable-mappings",level:2},{value:"Parchment",id:"parchment",level:3},{value:"Preparing Run Tasks",id:"preparing-run-tasks",level:2},{value:"Copy IDE Resources",id:"copy-ide-resources",level:3},{value:"Run Configuration Folders",id:"run-configuration-folders",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"forgegradle-configurations",children:"ForgeGradle Configurations"}),"\n",(0,s.jsxs)(n.p,{children:["ForgeGradle has numerous configurations that can change how the development environment is configured. Most configurations are set using the ",(0,s.jsx)(n.code,{children:"minecraft"})," block; however, some others can be specified within the ",(0,s.jsx)(n.code,{children:"dependencies"})," block or modify the built ",(0,s.jsx)(n.code,{children:"jar"}),", such as ",(0,s.jsx)(n.code,{children:"reobfJar"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"enabling-access-transformers",children:"Enabling Access Transformers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/",children:"Access Transformers"})," can widen the visibility or modify the ",(0,s.jsx)(n.code,{children:"final"})," flag of Minecraft classes, methods, and fields."]}),"\n",(0,s.jsxs)(t.Z,{defaultValue:"latest",children:[(0,s.jsxs)(o.Z,{value:"latest",label:"Latest",children:[(0,s.jsxs)(n.p,{children:["To enable Access Transformers in the production environment, you can set ",(0,s.jsx)(n.code,{children:"accessTransformers"})," to the configuration file in question:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"minecraft {\n    // ...\n\n    // Add an Access Transformer file relative to the project's directory\n    accessTransformers {\n        file('src/main/resources/META-INF/accesstransformer.cfg')\n\n        // Multiple files can be specified and are applied in order\n        file('src/main/resources/accesstransformer_extras.cfg')\n    }\n}\n"})}),(0,s.jsxs)(n.p,{children:["In production, NeoForge will search for Access Transformer files as specified in ",(0,s.jsx)(n.code,{children:"mods.toml"}),", or at ",(0,s.jsx)(n.code,{children:"META-INF/accesstransformer.cfg"})," if none are specified:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[[accessTransformers]]\nfile="META-INF/accesstransformer.cfg"\n\n[[accessTransformers]]\nfile="accesstransformer_extras.cfg"\n'})})]}),(0,s.jsxs)(o.Z,{value:"7.0.40",label:"7.0.40 and older",children:[(0,s.jsxs)(n.p,{children:["To enable Access Transformers in the production environment, you can set ",(0,s.jsx)(n.code,{children:"accessTransformer"})," to the configuration file in question:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"minecraft {\n    // ...\n\n    // Add an access transformer file relative to the project's directory\n    accessTransformer = project.file('src/main/resources/META-INF/accesstransformer.cfg')\n}\n"})}),(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["While the Access Transformer in the development environment can be read from anywhere the user specifies, in production, the file will only be read from ",(0,s.jsx)(n.code,{children:"META-INF/accesstransformer.cfg"}),"."]})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"human-readable-mappings",children:"Human-Readable Mappings"}),"\n",(0,s.jsxs)(n.p,{children:["Minecraft's source code is obfuscated. As such, all classes, methods, and fields have machine-generated names with no package structures. Function-local variable names, meanwhile, are turned into a snowman (",(0,s.jsx)(n.code,{children:"\u2603"}),") due to how the Local Variable Table is stored. It is difficult to create mods using obfuscated names as reverse engineering them is tedious, may change between versions, and may be invalid in the language itself but not in the bytecode."]}),"\n",(0,s.jsxs)(n.p,{children:["To address the last two issues, Forge fuzzily maps each class, method, field, and parameter to a unique identifier, known as the SRG name, via the ",(0,s.jsx)(n.a,{href:"https://github.com/MinecraftForge/ForgeAutoRenamingTool",children:"ForgeAutoRenamingTool"}),". SRG mappings are used in production when the game is being run by the user client."]}),"\n",(0,s.jsxs)(n.p,{children:["To allow easier development, ForgeGradle allows the user to choose a mapping set to apply on top of SRG mappings, which we will refer to as human-readable mappings. ForgeGradle knows how to convert the mod jar to SRG mappings for use in production via the ",(0,s.jsx)(n.code,{children:"reobf*"})," task."]}),"\n",(0,s.jsxs)(n.p,{children:["The mapping set used can be specified by setting the ",(0,s.jsx)(n.code,{children:"mappings"})," field in the ",(0,s.jsx)(n.code,{children:"minecraft"})," block. The ",(0,s.jsx)(n.code,{children:"mappings"})," field takes in two arguments: ",(0,s.jsx)(n.code,{children:"channel"})," which is the type of the mapping set, and ",(0,s.jsx)(n.code,{children:"version"})," which is the version of the mapping set to apply."]}),"\n",(0,s.jsx)(n.p,{children:"Currently, there are three default mapping sets built into ForgeGradle:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"official"})," - This uses the mapping set provided by Mojang. These mappings do not have parameter names and only exist from 1.14 onward."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stable"})," - This uses a mapping set generated by MCP. These are typically incomplete and no longer exist as of 1.17."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"snapshot"})," - This also is a mapping set generated by MCP, similar to a nightly build of a program. These are also typically incomplete and no longer exist as of 1.17."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["The class names used in production are from ",(0,s.jsx)(n.code,{children:"stable"})," prior to 1.17 and from ",(0,s.jsx)(n.code,{children:"official"})," from 1.17 onwards."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"mappings {\n    // Sets the mappings to use those from Mojang for Minecraft 1.19.4.\n    mappings channel: 'official', version: '1.19.4'\n\n    // ...\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"parchment",children:"Parchment"}),"\n",(0,s.jsxs)(n.p,{children:["Parchment is an official project maintained by ParchmentMC which provides open, community-sourced parameter names and javadocs on top of the ",(0,s.jsx)(n.code,{children:"official"})," mapping set. You can learn how setup and use the parchment mapping set on ",(0,s.jsx)(n.a,{href:"https://parchmentmc.org/docs/getting-started",children:"their website"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"preparing-run-tasks",children:"Preparing Run Tasks"}),"\n",(0,s.jsxs)(n.p,{children:["Run tasks (",(0,s.jsx)(n.code,{children:"run*"}),") have two separate pipelines depending on whether they are executed through ",(0,s.jsx)(n.code,{children:"gradlew"})," or a run configuration. By default, there are two tasks that prepare the workspace for execution:"]}),"\n",(0,s.jsxs)(n.p,{children:["First, there are ",(0,s.jsx)(n.code,{children:"prepare*"})," tasks which are executed before ",(0,s.jsx)(n.code,{children:"run*"})," tasks and ensure that mapping files are prepared for the game. The ",(0,s.jsx)(n.code,{children:"prepare*Compile"})," task is typically only executed as a dependency of ",(0,s.jsx)(n.code,{children:"run*"})," tasks to make sure that the game is compiled before it is run."]}),"\n",(0,s.jsxs)(n.p,{children:["If your IDE is either Eclipse or IntelliJ IDEA, the run configuration can be configured to execute the ",(0,s.jsx)(n.code,{children:"prepare*"})," tasks before starting the game by setting ",(0,s.jsx)(n.code,{children:"enableEclipsePrepareRuns"})," or ",(0,s.jsx)(n.code,{children:"enableIdeaPrepareRuns"}),", respectively, to ",(0,s.jsx)(n.code,{children:"true"}),". This will allow you to invoke custom Gradle tasks before your IDE launches the game."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"minecraft {\n    // ...\n\n    // Enable the 'prepare*' task for run configurations\n    enableEclipsePrepareRuns true\n    enableIdeaPrepareRuns true\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"copy-ide-resources",children:"Copy IDE Resources"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"copyIdeResources"})," property can be used to copy resources configured by the ",(0,s.jsx)(n.code,{children:"processResources"})," task to the IDE's resource output directories. This allows IDE run configurations that do not invoke Gradle (IntelliJ configured to use the IDEA runner or Eclipse) to use buildscript configurable resources. Usually, you need to enable this property when you are replacing values in files like the ",(0,s.jsx)(n.code,{children:"mods.toml"}),".",(0,s.jsx)(n.br,{}),"\n","This only applies to Eclipse and IntelliJ IDEA via the ",(0,s.jsx)(n.code,{children:"copyEclipseResources"})," and ",(0,s.jsx)(n.code,{children:"copyIntellijResources"})," tasks, respectively."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"minecraft {\n    // ...\n\n    // Copies the files from 'processResources' to the IDE's resource output directories\n    copyIdeResources true\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"run-configuration-folders",children:"Run Configuration Folders"}),"\n",(0,s.jsxs)(n.p,{children:["Run configurations can be sorted into folders if the ",(0,s.jsx)(n.code,{children:"generateRunFolders"})," is set to ",(0,s.jsx)(n.code,{children:"true"}),". This reads the ",(0,s.jsx)(n.code,{children:"folderName"})," property set in the specific ",(0,s.jsx)(n.a,{href:"/Neoforge-Korean-Documentation/neogradle/docs/configuration/runs#run-configurations",children:"run configuration"})," to determine the organizational structure."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"minecraft {\n    // ...\n\n    // When true, run configurations will be grouped into folders by their 'folderName'\n    generateRunFolders true\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},5162:(e,n,r)=>{r.d(n,{Z:()=>o});r(7294);var s=r(6010);const a={tabItem:"tabItem_Ymn6"};var t=r(5893);function o(e){let{children:n,hidden:r,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,o),hidden:r,children:n})}},4866:(e,n,r)=>{r.d(n,{Z:()=>w});var s=r(7294),a=r(6010),t=r(2466),o=r(6550),i=r(469),c=r(1980),l=r(7392),d=r(12);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:s,default:a}}=e;return{value:n,label:r,attributes:s,default:a}}))}(r);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.k6)(),t=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c._X)(t),(0,s.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(a.location.search);n.set(t,e),a.replace({...a.location,search:n.toString()})}),[t,a])]}function m(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,t=h(e),[o,c]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t}))),[l,u]=f({queryString:r,groupId:a}),[m,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,t]=(0,d.Nk)(r);return[a,(0,s.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:a}),b=(()=>{const e=l??m;return p({value:e,tabValues:t})?e:null})();(0,i.Z)((()=>{b&&c(b)}),[b]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),g(e)}),[u,g,t]),tabValues:t}}var g=r(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(5893);function j(e){let{className:n,block:r,selectedValue:s,selectValue:o,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,t.o5)(),d=e=>{const n=e.currentTarget,r=c.indexOf(n),a=i[r].value;a!==s&&(l(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:t}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...t,className:(0,a.Z)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":s===n}),children:r??n},n)}))})}function v(e){let{lazy:n,children:r,selectedValue:a}=e;const t=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...e,...n}),(0,x.jsx)(v,{...e,...n})]})}function w(e){const n=(0,g.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},1151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>o});var s=r(7294);const a={},t=s.createContext(a);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);