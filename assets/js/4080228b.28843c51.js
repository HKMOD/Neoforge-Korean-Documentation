"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[199],{8759:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var t=s(5893),i=s(1151);const a={},o="Named Binary Tag (NBT)",r={id:"datastorage/nbt",title:"Named Binary Tag (NBT)",description:"NBT is a format introduced in the earliest days of Minecraft, written by Notch himself. It is widely used throughout the Minecraft codebase for data storage.",source:"@site/docs/datastorage/nbt.md",sourceDirName:"datastorage",slug:"/datastorage/nbt",permalink:"/Neoforge-Korean-Documentation/docs/datastorage/nbt",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"\ucf54\ub371",permalink:"/Neoforge-Korean-Documentation/docs/datastorage/codecs"},next:{title:"\ub808\ubca8 \ub370\uc774\ud130",permalink:"/Neoforge-Korean-Documentation/docs/datastorage/saveddata"}},l={},d=[{value:"Specification",id:"specification",level:2},{value:"NBT Files",id:"nbt-files",level:2},{value:"NBT in Code",id:"nbt-in-code",level:2},{value:"Usages of NBT",id:"usages-of-nbt",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"named-binary-tag-nbt",children:"Named Binary Tag (NBT)"}),"\n",(0,t.jsx)(n.p,{children:"NBT is a format introduced in the earliest days of Minecraft, written by Notch himself. It is widely used throughout the Minecraft codebase for data storage."}),"\n",(0,t.jsx)(n.h2,{id:"specification",children:"Specification"}),"\n",(0,t.jsx)(n.p,{children:"The NBT spec is similar to the JSON spec, with a few differences:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Distinct types for bytes, shorts, longs and floats exist, suffixed by ",(0,t.jsx)(n.code,{children:"b"}),", ",(0,t.jsx)(n.code,{children:"s"}),", ",(0,t.jsx)(n.code,{children:"l"})," and ",(0,t.jsx)(n.code,{children:"f"}),", respectively, similar to how they would be represented in Java code.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Doubles may also be suffixed with ",(0,t.jsx)(n.code,{children:"d"}),", but this is not required, similar to Java code. The optional ",(0,t.jsx)(n.code,{children:"i"})," suffix available in Java for integers is not permitted."]}),"\n",(0,t.jsxs)(n.li,{children:["The suffixes are not case-sensitive. So for example, ",(0,t.jsx)(n.code,{children:"64b"})," is the same as ",(0,t.jsx)(n.code,{children:"64B"}),", and ",(0,t.jsx)(n.code,{children:"0.5F"})," is the same as ",(0,t.jsx)(n.code,{children:"0.5f"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Booleans do not exist, they are instead represented by bytes. ",(0,t.jsx)(n.code,{children:"true"})," becomes ",(0,t.jsx)(n.code,{children:"1b"}),", ",(0,t.jsx)(n.code,{children:"false"})," becomes ",(0,t.jsx)(n.code,{children:"0b"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The current implementation treats all non-zero values as ",(0,t.jsx)(n.code,{children:"true"}),", so ",(0,t.jsx)(n.code,{children:"2b"})," would be treated as ",(0,t.jsx)(n.code,{children:"true"})," as well."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["There is no ",(0,t.jsx)(n.code,{children:"null"})," equivalent in NBT."]}),"\n",(0,t.jsxs)(n.li,{children:["Quotes around keys are optional. So a JSON property ",(0,t.jsx)(n.code,{children:'"duration": 20'})," can become both ",(0,t.jsx)(n.code,{children:"duration: 20"})," and ",(0,t.jsx)(n.code,{children:'"duration": 20'})," in NBT."]}),"\n",(0,t.jsxs)(n.li,{children:["What is known in JSON as a sub-object is known in NBT as a ",(0,t.jsx)(n.strong,{children:"compound tag"})," (or just compound)."]}),"\n",(0,t.jsxs)(n.li,{children:["NBT lists cannot mix and match types, unlike in JSON. The list type is determined by the first element, or defined in code.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"However, lists of lists can mix and match different list types. So a list of two lists, where the first one is a list of strings and the second one is a list of bytes, is allowed."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["There are special ",(0,t.jsx)(n.strong,{children:"array"})," types that are different from lists, but follow their scheme of containing elements in square brackets. There are three array types:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Byte arrays, denoted by a ",(0,t.jsx)(n.code,{children:"B;"})," at the beginning of the array. Example: ",(0,t.jsx)(n.code,{children:"[B;0b,30b]"})]}),"\n",(0,t.jsxs)(n.li,{children:["Integer arrays, denoted by a ",(0,t.jsx)(n.code,{children:"I;"})," at the beginning of the array. Example: ",(0,t.jsx)(n.code,{children:"[I;0,-300]"})]}),"\n",(0,t.jsxs)(n.li,{children:["Long arrays, denoted by an ",(0,t.jsx)(n.code,{children:"L;"})," at the beginning of the array. Example: ",(0,t.jsx)(n.code,{children:"[L;0l,240l]"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Trailing commas in lists, arrays and compound tags are allowed."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"nbt-files",children:"NBT Files"}),"\n",(0,t.jsxs)(n.p,{children:["Minecraft uses ",(0,t.jsx)(n.code,{children:".nbt"})," files extensively, for example for structure files in ",(0,t.jsx)(n.a,{href:"/Neoforge-Korean-Documentation/docs/resources/server/",children:"datapacks"}),". Region files (",(0,t.jsx)(n.code,{children:".mca"}),") that contain the contents of a region (i.e. a collection of chunks), as well as the various ",(0,t.jsx)(n.code,{children:".dat"})," files used in different places by the game, are NBT files as well."]}),"\n",(0,t.jsx)(n.p,{children:"NBT files are typically compressed with GZip. As such, they are binary files and cannot be edited directly."}),"\n",(0,t.jsx)(n.h2,{id:"nbt-in-code",children:"NBT in Code"}),"\n",(0,t.jsx)(n.p,{children:"Like in JSON, all NBT objects are children of an enclosing object. So let's create one:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"CompoundTag tag = new CompoundTag();\n"})}),"\n",(0,t.jsx)(n.p,{children:"We can now put our data into that tag:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'tag.putInt("Color", 0xffffff);\ntag.putString("Level", "minecraft:overworld");\ntag.putDouble("IAmRunningOutOfIdeasForNamesHere", 1d);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Several helpers exist here, for example, ",(0,t.jsx)(n.code,{children:"putIntArray"})," also has a convenience method that takes a ",(0,t.jsx)(n.code,{children:"List<Integer>"})," in addition to the standard variant that takes an ",(0,t.jsx)(n.code,{children:"int[]"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Of course, we can also get values from that tag:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'int color = tag.getInt("Color");\nString level = tag.getString("Level");\ndouble d = tag.getDouble("IAmRunningOutOfIdeasForNamesHere");\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Number types will return 0 if absent. Strings will return ",(0,t.jsx)(n.code,{children:'""'})," if absent. More complex types (lists, arrays, compounds) will throw an exception if absent."]}),"\n",(0,t.jsx)(n.p,{children:"As such, we want to safeguard by checking if a tag element exists:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'boolean hasColor = tag.contains("Color");\nboolean hasColorMoreExplicitly = tag.contains("Color", Tag.TAG_INT);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"TAG_INT"})," constant is defined in ",(0,t.jsx)(n.code,{children:"Tag"}),", which is the super interface for all tag types. Most tag types besides ",(0,t.jsx)(n.code,{children:"CompoundTag"})," are mostly internal, for example ",(0,t.jsx)(n.code,{children:"ByteTag"})," or ",(0,t.jsx)(n.code,{children:"StringTag"}),", though the direct ",(0,t.jsx)(n.code,{children:"CompoundTag#get"})," and ",(0,t.jsx)(n.code,{children:"#put"})," methods can work with them if you ever stumble across some."]}),"\n",(0,t.jsxs)(n.p,{children:["There is one obvious exception, though: ",(0,t.jsx)(n.code,{children:"ListTag"}),"s. Working with these is special because when getting a list tag through ",(0,t.jsx)(n.code,{children:"CompoundTag#getList"}),", you must also specify the list type. So getting a list of strings, for example, would work like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ListTag list = tag.getList("SomeListHere", Tag.TAG_STRING);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Similarly, when creating a ",(0,t.jsx)(n.code,{children:"ListTag"}),", you must also specify the list type during creation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ListTag list = new ListTag(List.of("Value1", "Value2"), Tag.TAG_STRING);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Finally, working with ",(0,t.jsx)(n.code,{children:"CompoundTag"}),"s inside other ",(0,t.jsx)(n.code,{children:"CompoundTag"}),"s directly utilizes ",(0,t.jsx)(n.code,{children:"CompoundTag#get"})," and ",(0,t.jsx)(n.code,{children:"#put"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'tag.put("Tag", new CompoundTag());\ntag.get("Tag");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"usages-of-nbt",children:"Usages of NBT"}),"\n",(0,t.jsxs)(n.p,{children:["NBT is used in a lot of places in Minecraft. Some of the most common examples include ",(0,t.jsx)(n.a,{href:"/Neoforge-Korean-Documentation/docs/blockentities/",children:(0,t.jsx)(n.code,{children:"BlockEntity"})}),"s and ",(0,t.jsx)(n.code,{children:"Entity"}),"s."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ItemStack"}),"s abstract away the usage of NBT into ",(0,t.jsx)(n.a,{href:"/Neoforge-Korean-Documentation/docs/items/datacomponents",children:"data components"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://minecraft.wiki/w/NBT_format",children:"NBT Format on the Minecraft Wiki"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>o});var t=s(7294);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);