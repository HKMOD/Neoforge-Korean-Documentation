"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[7554],{363:e=>{e.exports=JSON.parse('{"pluginId":"neogradle","version":"current","label":"NG7","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"ngSidebar":[{"type":"link","label":"NeoGradle Documentation","href":"/Neoforge-Korean-Documentation/neogradle/docs/","docId":"docs/index","unlisted":false},{"type":"category","label":"NeoGradle Configurations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Run Configurations","href":"/Neoforge-Korean-Documentation/neogradle/docs/configuration/runs","docId":"docs/configuration/runs","unlisted":false}],"href":"/Neoforge-Korean-Documentation/neogradle/docs/configuration/"},{"type":"category","label":"Dependencies","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Non-Minecraft dependencies","href":"/Neoforge-Korean-Documentation/neogradle/docs/dependencies/nonmclibs","docId":"docs/dependencies/nonmclibs","unlisted":false},{"type":"link","label":"Jar-in-Jar","href":"/Neoforge-Korean-Documentation/neogradle/docs/dependencies/jarinjar","docId":"docs/dependencies/jarinjar","unlisted":false}],"href":"/Neoforge-Korean-Documentation/neogradle/docs/dependencies/"},{"type":"link","label":"Parchment","href":"/Neoforge-Korean-Documentation/neogradle/docs/parchment","docId":"docs/parchment","unlisted":false}]},"docs":{"docs/configuration/index":{"id":"docs/configuration/index","title":"NeoGradle Configurations","description":"NeoGradle has numerous configurations that can change how the development environment is configured.","sidebar":"ngSidebar"},"docs/configuration/runs":{"id":"docs/configuration/runs","title":"Run Configurations","description":"Run configurations define how an instance of the game is going to run. This includes arguments, working directories, task names, etc. Run configurations are defined within the runs block. No runs are configured by default; however, NeoGradle provides the configurations client, server, data and gameTestServer out of the box.","sidebar":"ngSidebar"},"docs/dependencies/index":{"id":"docs/dependencies/index","title":"Dependencies","description":"Dependencies are not only used to develop interoperability between mods or add additional libraries to the game, but it also determines what version of Minecraft to develop for. This will provide a quick overview on how to modify the repositories and dependencies block to add dependencies to your development environment.","sidebar":"ngSidebar"},"docs/dependencies/jarinjar":{"id":"docs/dependencies/jarinjar","title":"Jar-in-Jar","description":"Jar-in-Jar is a way to load dependencies for mods from within the jars of the mods. To accomplish this, Jar-in-Jar generates a metadata json within META-INF/jarjar/metadata.json on build containing the artifacts to load from within the jar.","sidebar":"ngSidebar"},"docs/dependencies/nonmclibs":{"id":"docs/dependencies/nonmclibs","title":"Non-Minecraft dependencies","description":"Non-Minecraft dependencies are not loaded by NeoForge by default in the development environment. To get NeoForge to recognize the non-Minecraft dependency, they must be added to runs as a runtime dependency.","sidebar":"ngSidebar"},"docs/index":{"id":"docs/index","title":"NeoGradle Documentation","description":"This is the official documentation for [NeoGradle], a [Gradle] plugin for developing [NeoForge] and mods using NeoForge.","sidebar":"ngSidebar"},"docs/parchment":{"id":"docs/parchment","title":"Parchment","description":"[Parchment] is a community-sourced set of mappings of parameter names and javadocs that augment the official names released by Mojang. By using parchment, you can get parameter names for most Minecraft methods, instead of the indescriptive p_ names.","sidebar":"ngSidebar"}}}')}}]);