"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[7515],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(t),m=r,g=s["".concat(c,".").concat(m)]||s[m]||u[m]||o;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4079:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const o={},i="Language Generation",l={unversionedId:"datagen/client/localization",id:"datagen/client/localization",title:"Language Generation",description:"Language files can be generated for a mod by subclassing LanguageProvider and implementing #addTranslations. Each LanguageProvider subclass created represents a separate locale] (enus represents American English, eses represents Spanish, etc.). After implementation, the provider must be [added to the DataGenerator.",source:"@site/docs/datagen/client/localization.md",sourceDirName:"datagen/client",slug:"/datagen/client/localization",permalink:"/Neoforge-Korean-Documentation/docs/datagen/client/localization",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"\ub370\uc774\ud130 \uc0dd\uc131\uae30",permalink:"/Neoforge-Korean-Documentation/docs/datagen/"},next:{title:"Model Generation",permalink:"/Neoforge-Korean-Documentation/docs/datagen/client/modelproviders"}},c={},p=[{value:"<code>LanguageProvider</code>",id:"languageprovider",level:2}],d={toc:p},s="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"language-generation"},"Language Generation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/Neoforge-Korean-Documentation/docs/concepts/internationalization"},"Language files")," can be generated for a mod by subclassing ",(0,r.kt)("inlineCode",{parentName:"p"},"LanguageProvider")," and implementing ",(0,r.kt)("inlineCode",{parentName:"p"},"#addTranslations"),". Each ",(0,r.kt)("inlineCode",{parentName:"p"},"LanguageProvider")," subclass created represents a separate ",(0,r.kt)("a",{parentName:"p",href:"https://minecraft.wiki/w/Language#Languages"},"locale")," (",(0,r.kt)("inlineCode",{parentName:"p"},"en_us")," represents American English, ",(0,r.kt)("inlineCode",{parentName:"p"},"es_es")," represents Spanish, etc.). After implementation, the provider must be ",(0,r.kt)("a",{parentName:"p",href:"/Neoforge-Korean-Documentation/docs/datagen/#data-providers"},"added")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DataGenerator"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// On the MOD event bus\n@SubscribeEvent\npublic void gatherData(GatherDataEvent event) {\n    event.getGenerator().addProvider(\n        // Tell generator to run only when client assets are generating\n        event.includeClient(),\n        // Localizations for American English\n        output -> new MyLanguageProvider(output, MOD_ID, "en_us")\n    );\n}\n')),(0,r.kt)("h2",{id:"languageprovider"},(0,r.kt)("inlineCode",{parentName:"h2"},"LanguageProvider")),(0,r.kt)("p",null,"Each language provider is simple a map of strings where each translation key is mapped to a localized name. A translation key mapping can be added using ",(0,r.kt)("inlineCode",{parentName:"p"},"#add"),". Additionally, there are methods which use the translation key of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Block"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Item"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ItemStack"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Enchantment"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MobEffect"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"EntityType"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// In LanguageProvider#addTranslations\nthis.addBlock(EXAMPLE_BLOCK, "Example Block");\nthis.add("object.examplemod.example_object", "Example Object");\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Localized names which contain alphanumeric values not in American English can be supplied as is. The provider automatically translates the characters into their unicode equivalents to be read by the game."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Encdoded as \'Example with a d\\u00EDacritic\'\nthis.addItem("example.diacritic", "Example with a d\xedacritic");\n'))))}u.isMDXComponent=!0}}]);