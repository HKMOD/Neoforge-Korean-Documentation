"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"1.20.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"category","label":"Getting Started with Neo","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\ubaa8\ub4dc \ud30c\uc77c (mods.toml)","href":"/Neoforge-Korean-Documentation/docs/gettingstarted/modfiles","docId":"gettingstarted/modfiles"},{"type":"link","label":"\ubaa8\ub4dc \uad6c\uc870\ud654","href":"/Neoforge-Korean-Documentation/docs/gettingstarted/structuring","docId":"gettingstarted/structuring"},{"type":"link","label":"\ubc84\uc804 \uad00\ub9ac","href":"/Neoforge-Korean-Documentation/docs/gettingstarted/versioning","docId":"gettingstarted/versioning"}],"href":"/Neoforge-Korean-Documentation/docs/gettingstarted/"},{"type":"category","label":"\uc2ec\ud654 \uc8fc\uc81c","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\uc811\uadfc \ubcc0\ud658\uc790","href":"/Neoforge-Korean-Documentation/docs/advanced/accesstransformers","docId":"advanced/accesstransformers"}]},{"type":"category","label":"\ube14\ub85d \uc5d4\ud2f0\ud2f0","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BlockEntityRenderer","href":"/Neoforge-Korean-Documentation/docs/blockentities/ber","docId":"blockentities/ber"}],"href":"/Neoforge-Korean-Documentation/docs/blockentities/"},{"type":"category","label":"\ube14\ub85d","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\ube14\ub85d\uc758 \uc0c1\ud0dc","href":"/Neoforge-Korean-Documentation/docs/blocks/states","docId":"blocks/states"}],"href":"/Neoforge-Korean-Documentation/docs/blocks/"},{"type":"category","label":"\ud575\uc2ec \uac1c\ub150\ub4e4","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\uc774\ubca4\ud2b8","href":"/Neoforge-Korean-Documentation/docs/concepts/events","docId":"concepts/events"},{"type":"link","label":"\ub2e4\uad6d\uc5b4 \uc9c0\uc6d0","href":"/Neoforge-Korean-Documentation/docs/concepts/internationalization","docId":"concepts/internationalization"},{"type":"link","label":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30","href":"/Neoforge-Korean-Documentation/docs/concepts/lifecycle","docId":"concepts/lifecycle"},{"type":"link","label":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac","href":"/Neoforge-Korean-Documentation/docs/concepts/registries","docId":"concepts/registries"},{"type":"link","label":"\ub9ac\uc18c\uc2a4\ub780","href":"/Neoforge-Korean-Documentation/docs/concepts/resources","docId":"concepts/resources"},{"type":"link","label":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc","href":"/Neoforge-Korean-Documentation/docs/concepts/sides","docId":"concepts/sides"}]},{"type":"category","label":"\ub370\uc774\ud130 \uc0dd\uc131\uae30","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"\ud074\ub77c\uc774\uc5b8\ud2b8","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Language Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/client/localization","docId":"datagen/client/localization"},{"type":"link","label":"Model Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/client/modelproviders","docId":"datagen/client/modelproviders"},{"type":"link","label":"Sound Definition Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/client/sounds","docId":"datagen/client/sounds"}]},{"type":"category","label":"\uc11c\ubc84","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advancement Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/advancements","docId":"datagen/server/advancements"},{"type":"link","label":"Datapack Registry Object Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/datapackregistries","docId":"datagen/server/datapackregistries"},{"type":"link","label":"Global Loot Modifier Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/glm","docId":"datagen/server/glm"},{"type":"link","label":"Loot Table Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/loottables","docId":"datagen/server/loottables"},{"type":"link","label":"Recipe Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/recipes","docId":"datagen/server/recipes"},{"type":"link","label":"Tag Generation","href":"/Neoforge-Korean-Documentation/docs/datagen/server/tags","docId":"datagen/server/tags"}]}],"href":"/Neoforge-Korean-Documentation/docs/datagen/"},{"type":"category","label":"\ucd94\uac00 \ub370\uc774\ud130 \uc800\uc7a5","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\uce90\ud328\ube4c\ub9ac\ud2f0","href":"/Neoforge-Korean-Documentation/docs/datastorage/capabilities","docId":"datastorage/capabilities"},{"type":"link","label":"\ucf54\ub371","href":"/Neoforge-Korean-Documentation/docs/datastorage/codecs","docId":"datastorage/codecs"},{"type":"link","label":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130","href":"/Neoforge-Korean-Documentation/docs/datastorage/saveddata","docId":"datastorage/saveddata"}]},{"type":"category","label":"Game Effects","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Particles","href":"/Neoforge-Korean-Documentation/docs/gameeffects/particles","docId":"gameeffects/particles"},{"type":"link","label":"Sounds","href":"/Neoforge-Korean-Documentation/docs/gameeffects/sounds","docId":"gameeffects/sounds"}]},{"type":"category","label":"GUIs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Menus","href":"/Neoforge-Korean-Documentation/docs/gui/menus","docId":"gui/menus"},{"type":"link","label":"Screens","href":"/Neoforge-Korean-Documentation/docs/gui/screens","docId":"gui/screens"}]},{"type":"category","label":"Items","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BlockEntityWithoutLevelRenderer","href":"/Neoforge-Korean-Documentation/docs/items/bewlr","docId":"items/bewlr"}],"href":"/Neoforge-Korean-Documentation/docs/items/"},{"type":"category","label":"Legacy","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Porting to Minecraft 1.20","href":"/Neoforge-Korean-Documentation/docs/legacy/porting","docId":"legacy/porting"}]},{"type":"category","label":"Miscellaneous","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Text Components","href":"/Neoforge-Korean-Documentation/docs/misc/components","docId":"misc/components"},{"type":"link","label":"Configuration","href":"/Neoforge-Korean-Documentation/docs/misc/config","docId":"misc/config"},{"type":"link","label":"Debug Profiler","href":"/Neoforge-Korean-Documentation/docs/misc/debugprofiler","docId":"misc/debugprofiler"},{"type":"link","label":"Game Tests","href":"/Neoforge-Korean-Documentation/docs/misc/gametest","docId":"misc/gametest"},{"type":"link","label":"Key Mappings","href":"/Neoforge-Korean-Documentation/docs/misc/keymappings","docId":"misc/keymappings"},{"type":"link","label":"Forge Update Checker","href":"/Neoforge-Korean-Documentation/docs/misc/updatechecker","docId":"misc/updatechecker"}]},{"type":"category","label":"Networking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Entities","href":"/Neoforge-Korean-Documentation/docs/networking/entities","docId":"networking/entities"},{"type":"link","label":"SimpleImpl","href":"/Neoforge-Korean-Documentation/docs/networking/simpleimpl","docId":"networking/simpleimpl"}],"href":"/Neoforge-Korean-Documentation/docs/networking/"},{"type":"category","label":"Rendering","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Model Extensions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Face Data","href":"/Neoforge-Korean-Documentation/docs/rendering/modelextensions/facedata","docId":"rendering/modelextensions/facedata"},{"type":"link","label":"Render Types","href":"/Neoforge-Korean-Documentation/docs/rendering/modelextensions/rendertypes","docId":"rendering/modelextensions/rendertypes"},{"type":"link","label":"Root Transforms","href":"/Neoforge-Korean-Documentation/docs/rendering/modelextensions/transforms","docId":"rendering/modelextensions/transforms"},{"type":"link","label":"Part Visibility","href":"/Neoforge-Korean-Documentation/docs/rendering/modelextensions/visibility","docId":"rendering/modelextensions/visibility"}]},{"type":"category","label":"Custom Model Loaders","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BakedModel","href":"/Neoforge-Korean-Documentation/docs/rendering/modelloaders/bakedmodel","docId":"rendering/modelloaders/bakedmodel"},{"type":"link","label":"ItemOverrides","href":"/Neoforge-Korean-Documentation/docs/rendering/modelloaders/itemoverrides","docId":"rendering/modelloaders/itemoverrides"},{"type":"link","label":"Transform","href":"/Neoforge-Korean-Documentation/docs/rendering/modelloaders/transform","docId":"rendering/modelloaders/transform"}],"href":"/Neoforge-Korean-Documentation/docs/rendering/modelloaders/"}]},{"type":"category","label":"Resources","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Resource Packs","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Models","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Item Properties","href":"/Neoforge-Korean-Documentation/docs/resources/client/models/itemproperties","docId":"resources/client/models/itemproperties"},{"type":"link","label":"Coloring Textures","href":"/Neoforge-Korean-Documentation/docs/resources/client/models/tinting","docId":"resources/client/models/tinting"}],"href":"/Neoforge-Korean-Documentation/docs/resources/client/models/"}],"href":"/Neoforge-Korean-Documentation/docs/resources/client/"},{"type":"category","label":"Datapacks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advancements","href":"/Neoforge-Korean-Documentation/docs/resources/server/advancements","docId":"resources/server/advancements"},{"type":"link","label":"Conditionally-Loaded Data","href":"/Neoforge-Korean-Documentation/docs/resources/server/conditional","docId":"resources/server/conditional"},{"type":"link","label":"Global Loot Modifiers","href":"/Neoforge-Korean-Documentation/docs/resources/server/glm","docId":"resources/server/glm"},{"type":"link","label":"Loot Tables","href":"/Neoforge-Korean-Documentation/docs/resources/server/loottables","docId":"resources/server/loottables"},{"type":"category","label":"Recipes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Recipes","href":"/Neoforge-Korean-Documentation/docs/resources/server/recipes/custom","docId":"resources/server/recipes/custom"},{"type":"link","label":"Non-Datapack Recipes","href":"/Neoforge-Korean-Documentation/docs/resources/server/recipes/incode","docId":"resources/server/recipes/incode"},{"type":"link","label":"Ingredients","href":"/Neoforge-Korean-Documentation/docs/resources/server/recipes/ingredients","docId":"resources/server/recipes/ingredients"}],"href":"/Neoforge-Korean-Documentation/docs/resources/server/recipes/"},{"type":"link","label":"Tags","href":"/Neoforge-Korean-Documentation/docs/resources/server/tags","docId":"resources/server/tags"}],"href":"/Neoforge-Korean-Documentation/docs/resources/server/"}]}]},"docs":{"advanced/accesstransformers":{"id":"advanced/accesstransformers","title":"\uc811\uadfc \ubcc0\ud658\uc790","description":"\uc811\uadfc \ubcc0\ud658\uc790 (AccessTransformer, AT\ub77c\uace0 \uc9e7\uac8c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ud074\ub798\uc2a4, \uba54\uc11c\ub4dc, \ud544\ub4dc\uc758 \uac00\uc2dc\uc131\uc744 \ud655\ub300\uc2dc\ud0a4\uac70\ub098, final \ud0a4\uc6cc\ub4dc \uc720\ubb34 \uc5ec\ubd80\ub97c \ubcc0\uacbd\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud558\uc5ec \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc811\uadfc \ubd88\uac00\ub2a5\ud55c \ud074\ub798\uc2a4 \uba64\ubc84\uc5d0 \uc811\uadfc\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","sidebar":"mainSidebar"},"blockentities/ber":{"id":"blockentities/ber","title":"BlockEntityRenderer","description":"BlockEntityRenderer, \ub610\ub294 BER \uc740 \uc815\uc801\uc778 \ubaa8\ub378(JSON, OBJ, B3D, others)\ub9cc\uc73c\ub860 \ud45c\ud604\ud558\uae30 \ud798\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub54c \ud574\ub2f9 \ube14\ub85d\uc740 BlockEntity \uac00 \uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4.","sidebar":"mainSidebar"},"blockentities/index":{"id":"blockentities/index","title":"\ube14\ub85d \uc5d4\ud2f0\ud2f0","description":"BlockEntity \ub294 \uac04\uc18c\ud654\ub41c Entity \ub85c, \ube14\ub7ed\uc5d0 \uc885\uc18d\ub41c \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4.","sidebar":"mainSidebar"},"blocks/index":{"id":"blocks/index","title":"\ube14\ub85d","description":"\ube14\ub85d\uc740, \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ub808\ubca8\uc5d0\uc11c \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc9c0\ud615\uacfc \uad6c\uc870\ubb3c, \uadf8\ub9ac\uace0 \uae30\uacc4\ub4e4 \uc804\ubd80 \ube14\ub85d\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74, \uc544\ub9c8 \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2e4 \uac83\uc77c \ud150\ub370\uc694, \uc774\ubc88\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\ub294 \uac83\ub4e4 \uba87\uac00\uc9c0\uc5d0 \ub300\ud574 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4.","sidebar":"mainSidebar"},"blocks/states":{"id":"blocks/states","title":"\ube14\ub85d\uc758 \uc0c1\ud0dc","description":"\uad6c\ubc84\uc804\uc5d0\uc11c \ube14\ub85d\uc758 \uc5ec\ub7ec \uc0c1\ud0dc \ud45c\ud604\ud558\uae30","sidebar":"mainSidebar"},"concepts/events":{"id":"concepts/events","title":"\uc774\ubca4\ud2b8","description":"\ud3ec\uc9c0\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5ec\ub7ec \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","sidebar":"mainSidebar"},"concepts/internationalization":{"id":"concepts/internationalization","title":"\ub2e4\uad6d\uc5b4 \uc9c0\uc6d0","description":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub2e4\uad6d\uc5b4\ub97c \uad6d\uc81c\ud654(Internationalization, i18n\ub77c\uace0 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\uc640 \ud604\uc9c0\ud654\ub97c \ud1b5\ud574 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud560\ub54c \ucf54\ub4dc\uc758 \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uc124\uacc4 \ubc29\ubc95\uc785\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \ud604\uc9c0\ud654\ub294 \ud45c\uc2dc\ub418\ub294 \uae00\uc790\ub4e4\uc744 \uc720\uc800\uc758 \uc5b8\uc5b4\uc5d0 \ub9de\uac8c \ubc14\uafb8\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4.","sidebar":"mainSidebar"},"concepts/lifecycle":{"id":"concepts/lifecycle","title":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30","description":"\ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uacfc\uc815\uc740 \uc0dd\uba85\uc8fc\uae30\ub77c\uace0 \ud558\ub294 \uc5ec\ub7ec \ub2e8\uacc4\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0dd\uba85\uc8fc\uae30\ub294 \uac1d\uccb4 \ub4f1\ub85d, \ub370\uc774\ud130 \uc0dd\uc131 \uc900\ube44, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc640\uc758 \ud1b5\uc2e0 \ub4f1\uc73c\ub85c \ub098\ub258\uba70, \uac01 \uc0dd\uba85\uc8fc\uae30 \ub2e8\uacc4\ub294 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \uc774\ubca4\ud2b8\ub97c \ubc29\uc1a1\ud569\ub2c8\ub2e4.","sidebar":"mainSidebar"},"concepts/registries":{"id":"concepts/registries","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac","description":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc774\uc6a9\ud574 \ube14\ub85d \ubc0f \uc544\uc774\ud15c\uacfc \uac19\uc740 \uac1d\uccb4\ub4e4\uc5d0 \uc811\uadfc\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac1d\uccb4\ub4e4\uc740 \ubaa8\ub450 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4; \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\ub4e4\uc740 \uac8c\uc784\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"concepts/resources":{"id":"concepts/resources","title":"\ub9ac\uc18c\uc2a4\ub780","description":"\ub9ac\uc18c\uc2a4\ub294 \uac8c\uc784\uc774 \uc0ac\uc6a9\ud558\ub294 \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130 \uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ucf54\ub4dc \uc548\uc5d0 \uc788\uc9c0 \uc54a\uace0 \ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4.","sidebar":"mainSidebar"},"concepts/sides":{"id":"concepts/sides","title":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc","description":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uba74\uc11c \uc219\uc9c0\ud574\uc57c \ud560 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc740 \\"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc774\ub4dc\\" \uc640 \\"\uc11c\ubc84 \uc0ac\uc774\ub4dc\\" \uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc624\ud574\ud558\uace0 \uc788\uace0, \uc774\ub85c \uc778\ud574 \uac8c\uc784\uc744 \ud295\uae30\uac8c \ud558\uc9c4 \uc54a\uc9c0\ub9cc \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud574\uacb0\ud558\uae30 \uae4c\ub2e4\ub85c\uc6b4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"datagen/client/localization":{"id":"datagen/client/localization","title":"Language Generation","description":"Language files can be generated for a mod by subclassing LanguageProvider and implementing #addTranslations. Each LanguageProvider subclass created represents a separate locale] (enus represents American English, eses represents Spanish, etc.). After implementation, the provider must be [added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/client/modelproviders":{"id":"datagen/client/modelproviders","title":"Model Generation","description":"Models] can be generated for models or block states by default. Each provides a method of generating the necessary JSONs (ModelBuilder#toJson for models and IGeneratedBlockState#toJson for block states). After implementation, the [associated providers must be added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/client/sounds":{"id":"datagen/client/sounds","title":"Sound Definition Generation","description":"The sounds.json file can be generated for a mod by subclassing SoundDefinitionsProvider and implementing #registerSounds. After implementation, the provider must be added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/index":{"id":"datagen/index","title":"\ub370\uc774\ud130 \uc0dd\uc131\uae30","description":"\ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub4e4\uc744 \ucf54\ub4dc\uc5d0\uc11c \uc815\uc758\ud558\uace0 \ubb38\ubc95\uc774\ub098 \uaddc\uaca9\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud3b8\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","sidebar":"mainSidebar"},"datagen/server/advancements":{"id":"datagen/server/advancements","title":"Advancement Generation","description":"Advancements] can be generated for a mod by constructing a new AdvancementProvider and providing AdvancementSubProviders. Advancements can either be created and supplied manually or, for convenience, created using Advancement$Builder. The provider must be [added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/server/datapackregistries":{"id":"datagen/server/datapackregistries","title":"Datapack Registry Object Generation","description":"Datapack registry objects can be generated for a mod by constructing a new DatapackBuiltinEntriesProvider and providing a RegistrySetBuilder with the new objects to register. The provider must be added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/server/glm":{"id":"datagen/server/glm","title":"Global Loot Modifier Generation","description":"Global Loot Modifiers (GLMs) can be generated for a mod by subclassing GlobalLootModifierProvider and implementing #start. Each GLM can be added generated by calling #add and specifying the name of the modifier and the modifier instance to be serialized. After implementation, the provider must be added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/server/loottables":{"id":"datagen/server/loottables","title":"Loot Table Generation","description":"Loot tables can be generated for a mod by constructing a new LootTableProvider and providing LootTableProvider$SubProviderEntrys. The provider must be added to the DataGenerator.","sidebar":"mainSidebar"},"datagen/server/recipes":{"id":"datagen/server/recipes","title":"Recipe Generation","description":"Recipes can be generated for a mod by subclassing RecipeProvider and implementing #buildRecipes. A recipe is supplied for data generation once a FinishedRecipe view is accepted by the consumer. FinishedRecipes can either be created and supplied manually or, for convenience, created using a RecipeBuilder.","sidebar":"mainSidebar"},"datagen/server/tags":{"id":"datagen/server/tags","title":"Tag Generation","description":"Tags] can be generated for a mod by subclassing TagsProvider and implementing #addTags. After implementation, the provider must be [added to the DataGenerator.","sidebar":"mainSidebar"},"datastorage/capabilities":{"id":"datastorage/capabilities","title":"\uce90\ud328\ube4c\ub9ac\ud2f0","description":"\uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \ud074\ub798\uc2a4 \ucc38\uc870\ub85c \uc778\ud55c \uac15\uc81c \uc885\uc18d\uc131\uc744 \ud53c\ud558\uba74\uc11c\ub3c4 \uc120\ud0dd\uc801\uc73c\ub85c \uae30\ub2a5\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"datastorage/codecs":{"id":"datastorage/codecs","title":"\ucf54\ub371","description":"\ucf54\ub371(Codec)\uc740 \ubaa8\uc7a5\uc758 DataFixerUpper(DFU)\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uc9c1\ub82c\ud654 \ub3c4\uad6c\ub85c, \uac1d\uccb4\ub97c JsonElement \ub610\ub294 Tag\uc640 \uac19\uc740 \uc5ec\ub7ec \ub370\uc774\ud130 \ud3ec\ub9f7\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ubc29\ubc95\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. DFU\ub294 \ud568\uc218\ud615 \uc5b8\uc5b4\uc778 \ud558\uc2a4\ucf08\uc5d0\uc11c \uc601\uac10\uc744 \ubc1b\uc544 \uc81c\uc791\ub418\uc5b4 \ub9ce\uc740 \uac1c\ub150\uc774 \uc0dd\uc18c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"datastorage/saveddata":{"id":"datastorage/saveddata","title":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130","description":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub294 (\ub610\ub294 Saved Data, SD) \uce90\ud328\ube4c\ub9ac\ud2f0 \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \uac01 \ub808\ubca8\uc5d0\ub2e4\uac00 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"gameeffects/particles":{"id":"gameeffects/particles","title":"Particles","description":"Particles are an effect within the game used as polish to better improve immersion. Their usefulness also requires great caution because of their methods of creation and reference.","sidebar":"mainSidebar"},"gameeffects/sounds":{"id":"gameeffects/sounds","title":"Sounds","description":"Terminology","sidebar":"mainSidebar"},"gettingstarted/index":{"id":"gettingstarted/index","title":"\ud3ec\uc9c0 \uc2dc\uc791\ud558\uae30","description":"NeoForged\uac00 \uc0dd\uae34\uc9c0 \uc5bc\ub9c8 \ub418\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0, \ubb38\uc11c\uc758 \ub0b4\uc6a9\uc774 \ucd5c\uc2e0 \uc815\ubcf4\uac00 \uc544\ub2d0 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","sidebar":"mainSidebar"},"gettingstarted/modfiles":{"id":"gettingstarted/modfiles","title":"\ubaa8\ub4dc \ud30c\uc77c (mods.toml)","description":"\ubaa8\ub4dc \ud30c\uc77c\uc740 JAR\uc5d0 \uc5b4\ub5a4 \ubaa8\ub4dc\uac00 \ub4e4\uc5b4\uc788\ub294\uc9c0, \'\ubaa8\ub4dc\' \uba54\ub274\uc5d0 \ud45c\uc2dc\ud560 \uc815\ubcf4\ub294 \ubb34\uc5c7\uc778\uc9c0, \uac8c\uc784\uc5d0\uc11c \ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4.","sidebar":"mainSidebar"},"gettingstarted/structuring":{"id":"gettingstarted/structuring","title":"\ubaa8\ub4dc \uad6c\uc870\ud654","description":"\uad6c\uc870\ud654\ub41c \ubaa8\ub4dc\ub294 \uc720\uc9c0 \uad00\ub9ac, \uae30\uc5ec, \ucf54\ub4dc\ubca0\uc774\uc2a4\uc5d0 \ub300\ud55c \uba85\ud655\ud55c \uc774\ud574\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","sidebar":"mainSidebar"},"gettingstarted/versioning":{"id":"gettingstarted/versioning","title":"\ubc84\uc804 \uad00\ub9ac","description":"In general projects, semantic versioning is often used (which has the format MAJOR.MINOR.PATCH). However, in","sidebar":"mainSidebar"},"gui/menus":{"id":"gui/menus","title":"Menus","description":"Menus are one type of backend for Graphical User Interfaces, or GUIs; they handle the logic involved in interacting with some represented data holder. Menus themselves are not data holders. They are views which allow to user to indirectly modify the internal data holder state. As such, a data holder should not be directly coupled to any menu, instead passing in the data references to invoke and modify.","sidebar":"mainSidebar"},"gui/screens":{"id":"gui/screens","title":"Screens","description":"Screens are typically the base of all Graphical User Interfaces (GUIs) in Minecraft: taking in user input, verifying it on the server, and syncing the resulting action back to the client. They can be combined with [menus] to create an communication network for inventory-like views, or they can be standalone which modders can handle through their own [network] implementations.","sidebar":"mainSidebar"},"items/bewlr":{"id":"items/bewlr","title":"BlockEntityWithoutLevelRenderer","description":"BlockEntityWithoutLevelRenderer is a method to handle dynamic rendering on items. This system is much simpler than the old ItemStack system, which required a BlockEntity, and did not allow access to the ItemStack.","sidebar":"mainSidebar"},"items/index":{"id":"items/index","title":"Items","description":"Along with blocks, items are a key component of most mods. While blocks make up the level around you, items exist within inventories.","sidebar":"mainSidebar"},"legacy/porting":{"id":"legacy/porting","title":"Porting to Minecraft 1.20","description":"Here you can find a list of primers on how to port from old versions to the current version. Some versions are lumped together since that particular version never saw much usage.","sidebar":"mainSidebar"},"misc/components":{"id":"misc/components","title":"Text Components","description":"\ucef4\ud3ec\ub128\ud2b8(Component)\ub294 \ud14d\uc2a4\ud2b8\ub97c \uc800\uc7a5\ud558\ub294 \ud0c0\uc785\uc785\ub2c8\ub2e4, \ud558\uc704 \ud0c0\uc785\uc778 MutableComponent\ub97c \uc774\uc6a9\ud574 \ub2e4\ub978 \ucef4\ud3ec\ub128\ud2b8\uc640 \uc5f0\uacb0 \ubc0f \uc11c\uc2dd\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucef4\ud3ec\ub128\ud2b8\ub294 \uc544\ub798 \uc815\uc801 \uba54\uc11c\ub4dc\ub4e4\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","sidebar":"mainSidebar"},"misc/config":{"id":"misc/config","title":"Configuration","description":"Configurations define settings and consumer preferences that can be applied to a mod instance. Forge uses a configuration system using TOML files and read with NightConfig.","sidebar":"mainSidebar"},"misc/debugprofiler":{"id":"misc/debugprofiler","title":"Debug Profiler","description":"Minecraft provides a Debug Profiler that provides system data, current game settings, JVM data, level data, and sided tick information to find time consuming code. Considering things like TickEvents and ticking BlockEntities, this can be very useful for modders and server owners that want to find a lag source.","sidebar":"mainSidebar"},"misc/gametest":{"id":"misc/gametest","title":"Game Tests","description":"Game Tests are a way to run in-game unit tests. The system was designed to be scalable and in parallel to run large numbers of different tests efficiently. Testing object interactions and behaviors are simply a few of the many applications of this framework.","sidebar":"mainSidebar"},"misc/keymappings":{"id":"misc/keymappings","title":"Key Mappings","description":"A key mapping, or key binding, defines a particular action that should be tied to an input: mouse click, key press, etc. Each action defined by a key mapping can be checked whenever the client can take an input. Furthermore, each key mapping can be assigned to any input through the Controls option menu.","sidebar":"mainSidebar"},"misc/updatechecker":{"id":"misc/updatechecker","title":"Forge Update Checker","description":"Forge provides a very lightweight, opt-in, update-checking framework. If any mods have an available update, it will show a flashing icon on the \'Mods\' button of the main menu and mod list along with the respective changelogs. It does not download updates automatically.","sidebar":"mainSidebar"},"networking/entities":{"id":"networking/entities","title":"Entities","description":"In addition to regular network messages, there are various other systems provided to handle synchronizing entity data.","sidebar":"mainSidebar"},"networking/index":{"id":"networking/index","title":"Networking","description":"Communication between servers and clients is the backbone of a successful mod implementation.","sidebar":"mainSidebar"},"networking/simpleimpl":{"id":"networking/simpleimpl","title":"SimpleImpl","description":"SimpleImpl is the name given to the packet system that revolves around the SimpleChannel class. Using this system is by far the easiest way to send custom data between clients and the server.","sidebar":"mainSidebar"},"rendering/modelextensions/facedata":{"id":"rendering/modelextensions/facedata","title":"Face Data","description":"In a vanilla \\"elements\\" model, additional data about an element\'s faces can be specified at either the element level or the face level. Faces which do not specify their own face data will fall back to the element\'s face data or a default if no face data is specified at the element level.","sidebar":"mainSidebar"},"rendering/modelextensions/rendertypes":{"id":"rendering/modelextensions/rendertypes","title":"Render Types","description":"Adding the render_type entry at the top level of the JSON suggests to the loader what render type the model should use. If not specified, the loader gets to pick the render type(s) used, often falling back to the render types returned by ItemBlockRenderTypes#getRenderLayers().","sidebar":"mainSidebar"},"rendering/modelextensions/transforms":{"id":"rendering/modelextensions/transforms","title":"Root Transforms","description":"Adding the transform entry at the top level of a model JSON suggests to the loader that a transformation should be applied to all geometry right before the rotations in the blockstate] file in the case of a block model, and before the [display transforms in the case of an item model. The transformation is available through IGeometryBakingContext#getRootTransform() in IUnbakedGeometry#bake().","sidebar":"mainSidebar"},"rendering/modelextensions/visibility":{"id":"rendering/modelextensions/visibility","title":"Part Visibility","description":"Adding the visibility entry at the top level of a model JSON allows control over the visibility of different parts of the model to decide whether they should be baked into the final BakedModel. The definition of a \\"part\\" is dependent on the model loader loading this model and custom model loaders are free to ignore this entry completely. Out of the model loaders provided by Forge only the composite model loader and the OBJ model loader make use of this functionality. The visibility entries are specified as \\"part name\\": boolean entries.","sidebar":"mainSidebar"},"rendering/modelloaders/bakedmodel":{"id":"rendering/modelloaders/bakedmodel","title":"BakedModel","description":"BakedModel is the result of calling UnbakedModel#bake for the vanilla model loader or IUnbakedGeometry#bake for custom model loaders. Unlike UnbakedModel or IUnbakedGeometry, which purely represents a shape without any concept of items or blocks, BakedModel is not as abstract. It represents geometry that has been optimized and reduced to a form where it is (almost) ready to go to the GPU. It can also process the state of an item or block to change the model.","sidebar":"mainSidebar"},"rendering/modelloaders/index":{"id":"rendering/modelloaders/index","title":"Custom Model Loaders","description":"A \\"model\\" is simply a shape. It can be a simple cube, it can be several cubes, it can be a truncated icosidodecahedron, or anything in between. Most models you\'ll see will be in the vanilla JSON format. Models in other formats are loaded into IUnbakedGeometrys by an IGeometryLoader at runtime. Forge provides default implementations for WaveFront OBJ files, buckets, composite models, models in different render layers, and a reimplementation of Vanilla\'s builtin/generated item model. Most things do not care about what loaded the model or what format it\'s in as they are all eventually represented by an BakedModel in code.","sidebar":"mainSidebar"},"rendering/modelloaders/itemoverrides":{"id":"rendering/modelloaders/itemoverrides","title":"ItemOverrides","description":"ItemOverrides provides a way for an BakedModel to process the state of an ItemStack and return a new BakedModel; thereafter, the returned model replaces the old one. ItemOverrides represents an arbitrary function (BakedModel, ItemStack, ClientLevel, LivingEntity, int) \u2192 BakedModel, making it useful for dynamic models. In vanilla, it is used to implement item property overrides.","sidebar":"mainSidebar"},"rendering/modelloaders/transform":{"id":"rendering/modelloaders/transform","title":"Transform","description":"When an BakedModel is being rendered as an item, it can apply special handling depending on which transform it is being rendered in. \\"Transform\\" means in what context the model is being rendered. The possible transforms are represented in code by the ItemDisplayContext enum. There are two systems for handling transform: the deprecated vanilla system, constituted by BakedModel#getTransforms, ItemTransforms, and ItemTransform, and the Forge system, embodied by the method IForgeBakedModel#applyTransform. The vanilla code is patched to favor using applyTransform over the vanilla system whenever possible.","sidebar":"mainSidebar"},"resources/client/index":{"id":"resources/client/index","title":"Resource Packs","description":"Resource Packs allow for the customization of client resources through the assets directory. This includes textures, models, sounds, localizations, and others. Your mod (as well as Forge itself) can also have resource packs. Any user can therefore modify all the textures, models, and other assets defined within this directory.","sidebar":"mainSidebar"},"resources/client/models/index":{"id":"resources/client/models/index","title":"Models","description":"The model system is Minecraft\'s way of giving blocks and items their shapes. Through the model system, blocks and items are mapped to their models, which define how they look. One of the main goals of the model system is to allow not only textures but the entire shape of a block/item to be changed by resource packs. Indeed, any mod that adds items or blocks also contains a mini-resource pack for their blocks and items.","sidebar":"mainSidebar"},"resources/client/models/itemproperties":{"id":"resources/client/models/itemproperties","title":"Item Properties","description":"Item properties are a way for the \\"properties\\" of items to be exposed to the model system. An example is the bow, where the most important property is how far the bow has been pulled. This information is then used to choose a model for the bow, creating an animation for pulling it.","sidebar":"mainSidebar"},"resources/client/models/tinting":{"id":"resources/client/models/tinting","title":"Coloring Textures","description":"Many blocks and items in vanilla change their texture color depending on where they are or what properties they have, such as grass. Models support specifying \\"tint indices\\" on faces, which are integers that can then be handled by BlockColors and ItemColors. See the wiki for information on how tint indices are defined in vanilla models.","sidebar":"mainSidebar"},"resources/server/advancements":{"id":"resources/server/advancements","title":"Advancements","description":"Advancements are tasks that can be achieved by the player which may advance the progress of the game. Advancements can trigger based on any action the player may be directly involved in.","sidebar":"mainSidebar"},"resources/server/conditional":{"id":"resources/server/conditional","title":"Conditionally-Loaded Data","description":"There are times when modders may want to include data-driven objects using information from another mod without having to explicitly make that mod a dependency. Other cases may be to swap out certain objects with other modded entries when they are present. This can be done through the conditional subsystem.","sidebar":"mainSidebar"},"resources/server/glm":{"id":"resources/server/glm","title":"Global Loot Modifiers","description":"Global Loot Modifiers are a data-driven method of handling modification of harvested drops without the need to overwrite dozens to hundreds of vanilla loot tables or to handle effects that would require interactions with another mod\'s loot tables without knowing what mods may be loaded. Global Loot Modifiers are also stacking, rather than last-load-wins, similar to tags.","sidebar":"mainSidebar"},"resources/server/index":{"id":"resources/server/index","title":"Datapacks","description":"In 1.13, Mojang added datapacks to the base game. They allow for the modification of the files for logical servers through the data directory. This includes advancements, loot_tables, structures, recipes, tags, etc. Forge, and your mod, can also have datapacks. Any user can therefore modify all the recipes, loot tables, and other data defined within this directory.","sidebar":"mainSidebar"},"resources/server/loottables":{"id":"resources/server/loottables","title":"Loot Tables","description":"Loot tables are logic files which dictate what should happen when various actions or scenarios occur. Although the vanilla system deals purely with item generation, the system can be expanded to perform any number of defined actions.","sidebar":"mainSidebar"},"resources/server/recipes/custom":{"id":"resources/server/recipes/custom","title":"Custom Recipes","description":"Every recipe definition is made up of three components: the Recipe implementation which holds the data and handles the execution logic with the provided inputs, the RecipeType which represents the category or context the recipe will be used in, and the RecipeSerializer which handles decoding and network communication of the recipe data. How one chooses to use the recipe is up to the implementor.","sidebar":"mainSidebar"},"resources/server/recipes/incode":{"id":"resources/server/recipes/incode","title":"Non-Datapack Recipes","description":"Not all recipes are simplistic enough or migrated to using data-driven recipes. Some subsystems still need to be patched within the codebase to provide support for adding new recipes.","sidebar":"mainSidebar"},"resources/server/recipes/index":{"id":"resources/server/recipes/index","title":"Recipes","description":"Recipes are a way to transform some number of objects into other objects within a Minecraft world. Although the vanilla system deals purely with item transformations, the system as a whole can be expanded to use any object the programmer creates.","sidebar":"mainSidebar"},"resources/server/recipes/ingredients":{"id":"resources/server/recipes/ingredients","title":"Ingredients","description":"Ingredients are predicate handlers for item-based inputs which check whether a certain ItemStack meets the condition to be a valid input in a recipe. All vanilla recipes that take inputs use an Ingredient or a list of Ingredients, which is then merged into a single Ingredient.","sidebar":"mainSidebar"},"resources/server/tags":{"id":"resources/server/tags","title":"Tags","description":"Tags are generalized sets of objects in the game used for grouping related things together and providing fast membership checks.","sidebar":"mainSidebar"}}}')}}]);